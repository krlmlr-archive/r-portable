Please have a look at the German open Source Center BerliOS at www.berlios.de
BerliOS will continue to support free hosting of cryptography projects even
when US laws change and don't allow to host cryptography projects in the USA.
Also look at sourcewell.berlios.de, the first Open Source announcement service
that itself is implemented as Open Source project.

***************** Important news ****************************

For the 'Slottable Source Plugin Module' SSPM Features read README.SSPM

***************** Please Test *********************************

NEW features of cdrtools-3.01a24:

This is the first localization step for cdrtools. All programs now (hopefully)
call gettext() for all strings that need localization.

-	The next step will include dgettext() calls for the libraries.

-	The following step will include the extracted strings

-	The last step will include German translations and install support
	for the resulting binary message object files.

----------> Please test and report compilation problems! <---------

***** NOTE: As mentioned since 2004, frontends to cdrtools should *****
*****		call all programs from cdrtools in the "C" locale *****
*****		by e.g. calling: LC_ALL=C cdrecord ....		  *****
*****		unless these frontends support localized strings  *****
*****		used by the cdrtools with NLS support.		  *****

This version compiles on Win-DOS using the Microsoft compiler cl.exe but
warning: due to missing POSIX compliance with basic features (e.g. stat()
does not return inode numbers), there are many problems with the resulting
code and thus it is recommended to better use a POSIX layer on top of 
WIN-DOS.

		*** WARNING        ***
		*** Need new smake ***

	*** Due to the fact that schily-2014-04-03 introduced to use new macro
	*** expansions and a related bug fix in smake, you need a new smake
	*** to compile this source. To ensure this, get a recent "schily"
	*** tarball from ftp://ftp.berlios.de/pub/schily/ or 
	*** from https://sourceforge.net/projects/schilytools/files/ and call:

	cd ./psmake
	./MAKE-all
	cd ..
	psmake/smake
	psmake/smake install

	Now you have a new smake that is able to compile this source.

	Note that the major makefile restructuring introduced in
	schily-2014-04-03 is now more than am month ago and thus seems
	to work without problems.

	WARNING: the new version of the isoinfo program makes use of the 
		*at() series of functions that have been introduced by Sun
		in August 2001 and added to POSIX.1-2008. For older platforms,
		libschily now includes emulations for these functions but
		these emulations have not yet been tested thouroughly.
		Please report problems!


All:

-	Fixed the autoconf test for #pragma weak, so it will not
	believe that "clang" supports #pragma weak in a compatible way.
	This is needed in order to compile libmdigest/sha2.c using clang.

-	New autoconf tests added for:

	libexpat
	libpcsclite / winscard.lib
	libcrypto / libeay32.lib
	libssl / ssleay32.lib

-	New autoconf test for expat.h

-	The makefile system added the INVERSE_SUBARCHDIR= to allow local
	autoconfiguration for shared libraries.

-	RULES/rules.top now also calls MKLINKS in the directory TEMPLATES

-	New compiler configuration files:

	RULES/cc-clang.rul
	RULES/cc-clang32.rul
	RULES/cc-clang64.rul

-	The Mac OS X related rules now support a new macro:

	LDFRAMEWORKS=

	that allows to add Apple specific libraries.

-	Added a new WIN32_LIBS= macro for Win-DOS specific libraries.
	These libraries have to be specified in the portable -lfoo
	format for "libfoo" and also work when compiling for MinGW32.
	When cl.exe is used, -lfoo is converted to foo.lib.

-	New configuration files:

	RULES/i386-darwin-clang.rul
	RULES/i386-darwin-clang32.rul
	RULES/i386-darwin-clang64.rul

-	New configuration files:

	RULES/i386-freebsd-clang.rul
	RULES/i586-linux-clang.rul
	RULES/x86_64-linux-clang.rul
	RULES/i86pc-sunos5-clang.rul
	RULES/sun4-sunos5-clang.rul

	Note that these files have not been tested yet.

-	RULES/cc-sunpro.rul now also includes rules for
	RULES/cc-sunpro32.rul and
	RULES/cc-sunpro64.rul

-	RULES/cc-gcc.rul now also includes rules for
	RULES/cc-gcc32.rul and
	RULES/cc-gcc64.rul

-	RULES/cc-sunpro32.rul added for orthogonality

-	RULES/cc-sunpro32.rul and
	RULES/cc-sunpro64.rul are symlinks to RULES/cc-sunpro.rul
	and RULES/cc-sunpro.rul uses a macro to include
	cc-sunpro.rul
	cc-sunpro32.rul
	cc-sunpro64.rul
	as needed

-	RULES/i86pc-sunos5-cc.rul now also includes rules for
	RULES/i86pc-sunos5-cc32.rul and
	RULES/i86pc-sunos5-cc64.rul

-	RULES/i86pc-sunos5-gcc.rul now also includes rules for
	RULES/i86pc-sunos5-gcc32.rul and
	RULES/i86pc-sunos5-gcc64.rul

-	RULES/sun4-sunos5-cc.rul now also includes rules for
	RULES/sun4-sunos5-cc32.rul and
	RULES/sun4-sunos5-cc64.rul

-	RULES/sun4-sunos5-gcc.rul now also includes rules for
	RULES/sun4-sunos5-gcc32.rul and
	RULES/sun4-sunos5-gcc64.rul

-	RULES/i586-linux-suncc.rul now also includes rules for
	RULES/i586-linux-suncc32.rul and
	RULES/i586-linux-suncc64.rul

-	RULES/9000-725-hp-ux-cc.rul now also includes rules for
	RULES/9000-725-hp-ux-cc32.rul and
	RULES/9000-725-hp-ux-cc64.rul

-	RULES/i486-cygwin32_nt-cc.rul now also includes rules for
	RULES/i486-cygwin32_nt-cc32.rul and
	RULES/i486-cygwin32_nt-cc64.rul

-	RULES/i486-cygwin32_nt-gcc.rul now also includes rules for
	RULES/i486-cygwin32_nt-gcc32.rul and
	RULES/i486-cygwin32_nt-gcc64.rul

-	RULES/ip22-irix-cc.rul now also includes rules for
	RULES/ip22-irix-cc64.rul

-	RULES/ip22-irix-gcc.rul now also includes rules for
	RULES/ip22-irix-gcc64.rul

-	RULES/power-macintosh-darwin-cc.rul now also includes rules for
	RULES/power-macintosh-darwin-cc32.rul and
	RULES/power-macintosh-darwin-cc64.rul

-	RULES/power-macintosh-darwin-gcc.rul now also includes rules for
	RULES/power-macintosh-darwin-gcc32.rul and
	RULES/power-macintosh-darwin-gcc64.rul

-	conf/makeinc now knows that a compiler name may not follow
	the "cc*" text rule. This helps to support "clang".

-	conf/cc-config.sh has been enhanced to detect whether 
	"cc" or "gcc" are emulated via "clang".

-	New files in TEMPLATES/ related to "clang"

-	TEMPLATES/ now includes config files for gcc32 and gcc64

-	TEMPLATES/ now includes config files for clang, clang32 and clang64

-	Add comment to DEFAULTS_CSW/sparc-cc.defs

-	config.guess now understands Mac OS X on 64 bit Intel

Libschily:

-	libschily/format.c fixed to compile again with K&R C that does
	not support "long double".

-	No longer use fgets() for fgetaline(), fgetline() and fgetstr() 
	as fgets() cannot deal with embedded '\0' chars before the '\n'.

-	libschily/fstream.c now supports local flags (for the caller)
	and pushable streams to keep blocks of pushed text atomically.

-	libschily/fchmodat.c was added, it has been forgotten when
	the emulations for the *at() functions have been introduced.
	It is needed for the new enhanced isoinfo command.

-	libschily/mknodat.c now correctly provides a mknodat() function even
	when there is no mknod() command.

-	libschily/futimens.c now is more Sun specific when trying to implement
	futimens() via utimensat(), as only Solaris supports a f*() interface
	in case that the path name is a NULL pointer.

Libparanoia (Ported/enhanced by Jörg Schilling, originated by Monty xiphmont@mit.edu):

Libedc (Optimized by Jörg Schilling, originated by Heiko Eißfeldt heiko@hexco.de):


Libcdrdeflt:

Libdeflt:

Libfind:

Libfile:

Libhfs_iso:


Libmdigest:

Libsiconv:


Libscg:


Libscgcmd:

Libmdigest:

Rscsi:

Cdrecord:

Cdda2wav (Maintained/enhanced by Jörg Schilling, originated by Heiko Eißfeldt heiko@hexco.de):

Readcd:

Scgcheck:

Scgskeleton:

Btcflash:

Mkisofs (Maintained/enhanced by Jörg Schilling since 1997, originated by Eric Youngdale):

	WARNING: the new version of the isoinfo program makes use of the 
		*at() series of functions that have been introduced by Sun
		in August 2001 and added to POSIX.1-2008. For older platforms,
		libschily now includes emulations for these functions but
		these emulations have not yet been tested thouroughly.
		Please report problems!

-	The man page isoinfo.8 was enhanced by mentioning the option -s (print
	file sizes in multiple if 2048 byte sectors) and by documenting the 
	list format that us used with -l.

-	isoinfo now evaluates the Rock Ridge "PN" signature and thus supports
	to display and use the major/minor device numbers.

-	isoinfo now extracts time stamps with sub second granularity in 
	order to be able to set fine grained file timestamps, see -X option
	below.

-	isoinfo now knows how to find out whether a ISO-9660 filesystem was
	created by a newer mkisofs and thus includes useful inode numbers
	in ISO-9660. These ISO-9660 based inode numbers are used in case that
	there is no Rock Ridge-1.12 that includes inode numbers in the "PX"
	signature.

-	isoinfo now has a new option -X that extracts alls files (in case that
	-find is not used) or files secected by a -find expression. Note that
	-find expressions may include -chown, -chgrp and -chmod to modify the
	meta data of files.

	HELIOS TODO:

	-	Add the HELIOS UNICODE mapping code. This needs to be done 
		at UCS-2 level for Joliet and UDF (instead of UTF-8) and only
		for Rock Ridge (in case of a UTF-8 based target locale) using
		UTF-8 based translations.

	-	Make the Apple extensions work again with "mkisofs -find"

TODO:

	-	read Joliet filenames with multi-session if no TRANS.TBL
		or RR is present. I am looking for a volunteer for this task!

		Note that this can never be 100% correct as there is no relation
		between the names on the master (UNIX) filesystem, the ISO-9660
		names and the Joliet names. Only the Rock Ridge names are
		untranslated with respect to the original files on the
		master (UNIX) filesystem.

	-	add libecc/edc for CDI and similar.


CYGWIN NT-4.0 NOTES:

To compile on Cygwin32, get Cygwin and install it.
For more information read README.win32

The files are located on:

ftp://ftp.berlios.de/pub/cdrecord/alpha ...

NOTE:	These tar archives are 100% POSIX compatible. GNU tar may get some
	minor trouble. If you like a 100% POSIX compliant tar, get star from
	ftp://ftp.berlios.de/pub/star/

WARNING: Do not use 'winzip' to extract the tar file!
	Winzip cannot extract symbolic links correctly.

Joerg
